{"version":3,"sources":["config/express.js"],"names":["app","resolve","reject","env","webpackConfig","require","compiler","clientPath","use","hot","publicPath","output","noInfo","then","urlencoded","extended","json","static","join","__dirname","get","req","res","next","url","sendFile","process","NODE_ENV"],"mappings":";;;;;;kBAWe,UAASA,GAAT,EAAc;;AAE3B,yBAAY,UAASC,OAAT,EAAkBC,MAAlB,EAAyB;AACnC,QAAIC,QAAQ,aAAZ,EAA2B;AACzB,UAAIC,gBAAgBC,QAAQ,6BAAR,CAApB;AACA,UAAOC,WAAW,uBAAQF,aAAR,CAAlB;AACA,UAAMG,aAAa,qBAAnB;AACAP,UAAIQ,GAAJ,CAAQ,oCAAqBF,QAArB,CAAR;AACAN,UAAIQ,GAAJ,CAAQ,oCAAqBF,QAArB,EAA+B;AACrCG,aAAK,IADgC;AAErCC,oBAAYN,cAAcO,MAAd,CAAqBD,UAFI;AAGrCE,gBAAQ;AAH6B,OAA/B,CAAR;AAKAX,cAAQM,UAAR;AACD,KAXD,MAaK,IAAIJ,QAAQ,YAAZ,EAA0B;AAC7B,UAAMI,cAAa,cAAnB;AACAN,cAAQM,WAAR;AACD;AACF,GAlBD,EAkBGM,IAlBH,CAkBQ,UAASN,UAAT,EAAoB;AAC1BP,QAAIQ,GAAJ,CAAQ,qBAAWM,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;AACAf,QAAIQ,GAAJ,CAAQ,qBAAWQ,IAAX,EAAR;;AAEAhB,QAAIQ,GAAJ,CAAQ,kBAAQS,MAAR,CAAe,eAAKC,IAAL,CAAUC,SAAV,EAAqBZ,UAArB,CAAf,CAAR;;AAEAP,QAAIoB,GAAJ,CAAQ,IAAR,EAAc,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACtC,UAAIF,IAAIG,GAAJ,KAAY,eAAhB,EAAiC,OAAOD,MAAP,CAAjC,KACK;AACHD,YAAIG,QAAJ,CAAa,eAAKP,IAAL,CAAUC,SAAV,EAAqBZ,aAAa,aAAlC,CAAb;AACD;AACF,KALD;AAMD,GA9BD;AAgCD,C;;AA7CD;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIJ,MAAMuB,QAAQvB,GAAR,CAAYwB,QAAZ,GAAuBD,QAAQvB,GAAR,CAAYwB,QAAZ,IAAwB,aAAzD;;AAoCC","file":"express.js","sourcesContent":["import bodyParser from 'body-parser';\r\nimport express from 'express';\r\nimport path from 'path';\r\nimport webpack from 'webpack';\r\nimport webpackDevMiddleware from 'webpack-dev-middleware';\r\nimport WebpackDevServer from 'webpack-dev-server';\r\nimport webpackHotMiddleware from 'webpack-hot-middleware';\r\nimport Promise from 'bluebird';\r\n\r\nlet env = process.env.NODE_ENV = process.env.NODE_ENV || 'development';\r\n\r\nexport default function(app) {\r\n\r\n  new Promise(function(resolve, reject){\r\n    if (env === 'development') {\r\n      var webpackConfig = require('../../webpack.dev.config.js');\r\n      const  compiler = webpack(webpackConfig);\r\n      const clientPath = '../../client/public';\r\n      app.use(webpackDevMiddleware(compiler));\r\n      app.use(webpackHotMiddleware(compiler, {\r\n        hot: true,\r\n        publicPath: webpackConfig.output.publicPath,\r\n        noInfo: true\r\n      }));\r\n      resolve(clientPath);\r\n    }\r\n\r\n    else if (env === 'production') {\r\n      const clientPath = '../../client';\r\n      resolve(clientPath);\r\n    }\r\n  }).then(function(clientPath){\r\n    app.use(bodyParser.urlencoded({ extended: true }));\r\n    app.use(bodyParser.json());\r\n\r\n    app.use(express.static(path.join(__dirname, clientPath)));\r\n\r\n    app.get('/*', function (req, res, next) {\r\n      if (req.url === '/api/services') return next();\r\n      else {\r\n        res.sendFile(path.join(__dirname, clientPath + '/index.html'));\r\n      }\r\n    });\r\n  })\r\n\r\n};\r\n"]}