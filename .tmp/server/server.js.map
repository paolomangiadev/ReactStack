{"version":3,"sources":["server.js"],"names":["Promise","require","connect","mongo","uri","options","connection","on","err","console","error","process","exit","seedDB","app","server","createServer","io","listen","default","socket","log","data","serverPort","exports","module"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AACA,mBAASA,OAAT,GAAmBC,QAAQ,UAAR,CAAnB;;AAGA;AACA,mBAASC,OAAT,CAAiB,iBAAOC,KAAP,CAAaC,GAA9B,EAAmC,iBAAOD,KAAP,CAAaE,OAAhD;AACA,mBAASC,UAAT,CAAoBC,EAApB,CAAuB,OAAvB,EAAgC,UAASC,GAAT,EAAc;AAC5CC,UAAQC,KAAR,CAAc,+BAA+BF,GAA7C;AACAG,UAAQC,IAAR,CAAa,CAAC,CAAd;AACD,CAHD;;AAKA;AACA,IAAI,iBAAOC,MAAX,EAAmB;AAAEZ,UAAQ,eAAR;AAA2B;;AAEhD;AACA,IAAIa,MAAM,wBAAV;AACA,IAAIC,SAAS,eAAKC,YAAL,CAAkBF,GAAlB,CAAb;AACA,IAAIG,KAAK,iBAAOC,MAAP,CAAcH,MAAd,CAAT,C,CAAgC;;AAEhCd,QAAQ,kBAAR,EAA4BkB,OAA5B,CAAoCL,GAApC,E,CAA0C;AAC1Cb,QAAQ,UAAR,EAAoBkB,OAApB,CAA4BL,GAA5B,E,CAAkC;;AAElCG,GAAGV,EAAH,CAAM,YAAN,EAAoB,UAAUa,MAAV,EAAkB;AACpCX,UAAQY,GAAR,CAAY,qBAAZ;;AAEAD,SAAOb,EAAP,CAAU,MAAV,EAAkB,UAASe,IAAT,EAAe;AAC7Bb,YAAQY,GAAR,CAAYC,IAAZ;AACH,GAFD;AAGD,CAND;;AAQAP,OAAOG,MAAP,CAAc,iBAAOK,UAArB,EAAiC,YAAY;AAC3Cd,UAAQY,GAAR,CAAY,mCAAmC,iBAAOE,UAAtD;AACD,CAFD;;AAIA;AACAC,UAAUC,OAAOD,OAAP,GAAiBT,MAA3B;;;;;;;;gCApBID,G;;gCACAC,M;;gCACAE,E","file":"server.js","sourcesContent":["import express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport Promise from 'bluebird';\nimport config from './config';\r\nimport http from 'http';\r\nimport socket from 'socket.io';\r\nimport mongoose from 'mongoose';\nmongoose.Promise = require('bluebird');\r\n\r\n\r\n// Connect to MongoDB\r\nmongoose.connect(config.mongo.uri, config.mongo.options);\r\nmongoose.connection.on('error', function(err) {\r\n  console.error('MongoDB connection error: ' + err);\r\n  process.exit(-1);\r\n});\r\n\r\n// Populate databases with sample data\r\nif (config.seedDB) { require('./config/seed'); }\r\n\r\n// Setup Server\r\nvar app = express();\r\nvar server = http.createServer(app);\r\nvar io = socket.listen(server); //Mother fkng socket.io\r\n\r\nrequire('./config/express').default(app); // Express configs\r\nrequire('./routes').default(app); // Express Routes\r\n\r\nio.on('connection', function (socket) {\r\n  console.log('Client connected...');\r\n\r\n  socket.on('join', function(data) {\r\n      console.log(data);\r\n  });\r\n});\r\n\r\nserver.listen(config.serverPort, function () {\r\n  console.log('ReactStack listening on port: ' + config.serverPort);\r\n});\r\n\r\n// Expose app\r\nexports = module.exports = server;\r\n"]}